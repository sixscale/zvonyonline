from ..services.google_sheets import google_sheets_api

def get_projects_formulas(start_cell: int, table_shift: int) -> list[str]:
    return [
        "",
        f"=C{start_cell}-C{start_cell + table_shift - 2}",
        f"=(C{start_cell}-C{start_cell + table_shift - 2})/C{start_cell + table_shift - 2}",
        '',
        f"=F{start_cell}/C{start_cell}",
        f"=F{start_cell}-F{start_cell + table_shift - 2}",
        f"=(G{start_cell}-G{start_cell + table_shift - 2})",
        '',
        f"=J{start_cell}-J{start_cell + table_shift - 2}",
        f"=(J{start_cell}-J{start_cell + table_shift - 2})/J{start_cell + table_shift - 2}",
        f"=J{start_cell}/C{start_cell}",
        f"=J{start_cell}/F{start_cell}",
        f"=M{start_cell}-M{start_cell}",
        f"=(N{start_cell}-N{start_cell + table_shift - 2})",
        '60',
        f"=F{start_cell}*Q{start_cell}",
        f"=Q{start_cell}-Q{start_cell + table_shift - 2}",
        f"=(Q{start_cell}-Q{start_cell + table_shift - 2})/Q{start_cell + table_shift - 2}",
        f"=R{start_cell}-R{start_cell + table_shift - 2}",
        f"=(R{start_cell}-R{start_cell + table_shift - 2})/R{start_cell + table_shift - 2}",
        '-',
        '',
        '',
        '',
        f"=R{start_cell}/R{start_cell + table_shift - 2}",
        f"=AA{start_cell}-AA{start_cell + table_shift - 2}",
        f"=(AA{start_cell}-AA{start_cell + table_shift - 2})/AA{start_cell + table_shift - 2}",
        f'=F{start_cell}',
        f'=AD{start_cell}/AE3',
        f'=AD{start_cell}-AD{start_cell + table_shift - 2}',
        f'=(AD{start_cell} - AD{start_cell + table_shift - 2})/AG{start_cell + table_shift - 2}',
        f'=AE{start_cell} - AE{start_cell + table_shift - 2}',
        f'=(AE{start_cell}-AE{start_cell + table_shift - 2})/AE{start_cell + table_shift - 2}',
        f'=AD{start_cell}/AF2',
        f'=AJ{start_cell}-AJ{start_cell + table_shift - 2}',
        f'=(AJ{start_cell}-AJ{start_cell + table_shift - 2})/AJ{start_cell + table_shift - 2}',
        '9',
        f'=AM{start_cell}-AM{start_cell + table_shift - 2}',
        f'=AD{start_cell}/AM{start_cell}',
        f'=AE{start_cell}/AM{start_cell}',
        f'=AO{start_cell}-AO{start_cell + table_shift - 2}',
        f'=(AO{start_cell}-AO{start_cell + table_shift - 2})/AO{start_cell + table_shift - 2}',
        f'=AP{start_cell}-AP{start_cell + table_shift - 2}',
        f'=(AP{start_cell}-AP{start_cell + table_shift - 2})/AP{start_cell + table_shift - 2}',
        f'=AJ{start_cell}/AP{start_cell}',
        f'=AU{start_cell} - AU{start_cell + table_shift - 2}',
        f'=(AU{start_cell} - AU{start_cell + table_shift - 2})/AU{start_cell + table_shift - 2}',
    ]


def get_projects_total_formulas(start_cell: int, table_shift: int, count_of_client: int) -> list[str]:
    return [   
        "Итого: ",
        "",
        f'=СУММ(C{start_cell - count_of_client}:C{start_cell - 1})',
        f'=C{start_cell}-C{start_cell + table_shift - 2}',
        f'=(C{start_cell}-C{start_cell + table_shift - 2})/C{start_cell + table_shift - 2}',
        f'=СУММ(F{start_cell - count_of_client}:F{start_cell - 1})',
        '',
        '',
        '',
        f'=СУММ(J{start_cell - count_of_client}:J{start_cell - 1})',
        f'=J{start_cell}-J{start_cell + table_shift - 2}',
        f'=(J{start_cell}-J{start_cell + table_shift - 2})/J{start_cell + table_shift - 2}',
        '',
        '',
        '',
        '',
        '',
        f'=СУММ(R{start_cell - count_of_client}:R{start_cell - 1})',
        '',
        '',
        f'=R{start_cell}-R{start_cell + table_shift - 2}',
        f'=(R{start_cell}-R{start_cell + table_shift - 2})/R{start_cell + table_shift - 2}',
        f'=R{start_cell}/J{start_cell}',
        f'=AA{start_cell}-AA{start_cell + table_shift - 2}',
        f'=(AA{start_cell}-AA{start_cell + table_shift - 2})/AA{start_cell + table_shift - 2}',
    ]


def get_client_total_cells_addresse(start_letter: str, total_row_numbers: list[int]) -> list[str]:
    return list(map(lambda x: f"{start_letter}{x}", total_row_numbers))


def get_clients_total_formulas(start_cell: int, total_row_numbers: list[int], table_shift: int) -> list[str]:
    return [
        "Итого по всем:",
        "",
        f"=СУММ({'; '.join(get_client_total_cells_addresse('C', total_row_numbers))};)",
        f"=C{start_cell}-C{start_cell + table_shift - 2}",
        f"=(C{start_cell}-C{start_cell + table_shift - 2})/C{start_cell + table_shift - 2}",
        f"=СУММ({'; '.join(get_client_total_cells_addresse('F', total_row_numbers))};)",
        "",
        "",
        "",
        f"=СУММ({'; '.join(get_client_total_cells_addresse('J', total_row_numbers))};)",
        f"=J{start_cell}-J{start_cell + table_shift - 2}",
        f"=(J{start_cell}-J{start_cell + table_shift - 2})/J{start_cell + table_shift - 2}",
        "",
        "",
        "",
        "",
        "",
        f"=СУММ({'; '.join(get_client_total_cells_addresse('R', total_row_numbers))};)",
        "",
        "",
        f"=R{start_cell}-R{start_cell + table_shift - 2}",
        f"=(R{start_cell}-R{start_cell + table_shift - 2})/R{start_cell + table_shift - 2}",
    ]
